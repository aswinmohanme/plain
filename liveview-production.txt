
2022-03-23, Work in Progress


Phoenix LiveView in Production
==============================
I came across a
[thread](https://elixirforum.com/t/are-you-all-in-on-liveview-how-are-you-using-it/41628/14)
on ElixirForum that highlighted how everyone was using LiveView in their
production apps. It also had some blog posts about using LiveView in production.
Since IndiePaper is a Phoenix LiveView app, I thought it would be nice to share
my expereince with it.


Context
-------
Before we jump right in, it would be wise to share about who I am and specifics
about the project. I'm a single developer working on IndiePaper. It is a book
publishing platform, where authors can write out their book in our online text
editor and we typeset beautiful PDF books from them. The app is a simple CRUD
app with auth, uploads and a custom typesetting engine.

I used TDD to develop the app and it's deployed on [fly.io]().


Why chose LiveView?
-------------------
I wrote the first version of IndiePaper in Phoenix, but it was at a time when I
didn't knew anything about the framework. I rewrote the entire thing in NextJS
and Hasura, then in Rails, then using FaunaDB, then in LiveView and then again
in vanilla Phoenix. This time I knew enough Elixir and Phoenix to actually make
something useful. I was content with the HTTP reloads and it was working well.

After some features was complete I wanted to add file uploads for book promo
images. Even though there were well built packages for handling uploads, I was
intrigued by the [File Uploads in
LiveView](https://www.youtube.com/watch?v=PffpT2eslH8) video by Chris. I tried
implementing it, but it didn't work because I didn't knew anything about
LiveView. So I bought a [Programming Phoenix
LiveView](https://pragprog.com/titles/liveview/programming-phoenix-liveview/)
and [Testing LiveView](https://www.testingliveview.com/) and started learning.

After a while I finished setting up the uploads feature. Then I converted one
page just for the fun of it and was instantly hooked. I ended up converting the
entire app to Phoenix LiveView pages, including a complex realtime editor.


The Great Parts
---------------


The Good Parts
--------------


The Bad Parts
-------------


The Fuck This Parts
-------------------
